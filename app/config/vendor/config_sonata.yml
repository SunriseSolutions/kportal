sonata_formatter:
    ckeditor:
        templates:
            browser: 'SonataFormatterBundle:Ckeditor:browser.html.twig'
            upload: 'SonataFormatterBundle:Ckeditor:upload.html.twig'
    formatters:
        markdown:
            service: sonata.formatter.text.markdown
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig #keep this commented unless you are using media bundle.
        text:
            service: sonata.formatter.text.text
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig
        rawhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig
        richhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig
        twig:
            service: sonata.formatter.text.twigengine
            extensions: [] # Twig formatter cannot have extensions

#sonata_classification:
#    admin:
#        tag:
#            class:                Application\Sonata\ClassificationBundle\Admin\TagAdmin
#            controller:           'SonataAdminBundle:CRUD'
#            translation:          SonataClassificationBundle
#        category:
#            class:                Application\Sonata\ClassificationBundle\Admin\CategoryAdmin
#            controller:           'SonataAdminBundle:CRUD'
#            translation:          SonataClassificationBundle

sonata_notification:
    backend: sonata.notification.backend.doctrine
    backends:
        doctrine:
            max_age:      86400     # max age in second
            pause:        500000    # delay in microseconds
            states:                 # raising errors level
                in_progress: 10
                error:       20
                open:        100
                done:        10000

    queues:
#        - { queue: sonata_page, types: [sonata.page.create_snapshot, sonata.page.create_snapshots]}
        - { queue: catchall, default: true }    
    
sonata_block:
    default_contexts: [inspot]
    blocks:
        sonata.block.service.text:
        sonata.block.service.rss:
        # enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts: [admin]
        sonata.admin.block.search_result:
            contexts: [admin]
        sonata_admin_doctrine_phpcr.tree_block:
            settings:
                id: '/inspot'
            contexts:   [admin]
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
        # Some specific blocks from the SonataMediaBundle
        sonata.media.block.media:
        sonata.media.block.gallery:
        sonata.media.block.feature_media:

        # custom blocks
#        app.admin.dashboard_block:

sonata_admin:
    security:
        handler: sonata.admin.security.handler.role

#    admin_services:
#        app.admin.listing:
#            route_generator: app.admin.route_generator.phpcr
    extensions:
        cmf_sonata_admin_integration.core.extension.child:
            implements:
                - Symfony\Cmf\Bundle\CoreBundle\Model\ChildInterface
#        cmf_core.admin_extension.publish_workflow.time_period:
#            implements:
#                - Symfony\Cmf\Bundle\CoreBundle\PublishWorkflow\PublishTimePeriodInterface
        cmf_sonata_admin_integration.core.extension.publish_workflow.publishable:
            implements:
                - Symfony\Cmf\Bundle\CoreBundle\PublishWorkflow\PublishableInterface
#        cmf_menu.admin_extension.menu_node_referrers:
#            implements:
#                - Symfony\Cmf\Bundle\MenuBundle\Model\MenuNodeReferrersInterface
#        cmf_menu.admin_extension.menu_options:
#            implements:
#                - Symfony\Cmf\Bundle\MenuBundle\Model\MenuOptionsInterface
#        cmf_routing.admin_extension.route_referrers:
#            implements:
#                - Symfony\Cmf\Component\Routing\RouteReferrersInterface
#        cmf_routing.admin_extension.frontend_link:
#            implements:
#                - Symfony\Cmf\Component\Routing\RouteReferrersReadInterface
#            extends:
#                - Symfony\Component\Routing\Route
        cmf_sonata_admin_integration.seo.extension.metadata:
            implements:
                - Symfony\Cmf\Bundle\SeoBundle\SeoAwareInterface

    templates:
        layout: ::admin/standard_layout.html.twig
#        show: ::admin/show.html.twig
#        list_block: ::admin/block_admin_list.html.twig
#        inner_list_row: ::admin/list_inner_row.html.twig
#        edit: ::admin/edit.html.twig


    title:                'KPortal'
#    title_logo:           bundles/sonataadmin/logo_title.png
    options:
        title_mode: 'single_text'

    dashboard:
        blocks:
            - { position: right, type: sonata.admin.block.admin_list }
#            - { position: left, type: app.admin.dashboard_block }
#       If no groups are configured, CmfRoutingBundle::dashboard.cmf shall be used as the default group for CMF Bundles.
        groups:
            media:
                label: dashboard.media
                icon: '<i class="fa fa-video-camera"></i>'
                items:
                    - sonata.media.admin.media
                    - sonata.media.admin.gallery
#                    - sonata.media.admin.gallery_has_media
#            classification:
#                label: dashboard.classification
#                icon: '<i class="fa fa-folder"></i>'
#                items:
#                    - sonata.classification.admin.category
#                    - sonata.classification.admin.tag
#                    - sonata.classification.admin.collection
#                    - sonata.classification.admin.context
            jobboard:
                label: dashboard.jobboard
                icon: '<i class="fa fa-folder"></i>'
                items:
#                    - app.admin.organisation
#                    - app.admin.listing
#                    - app.admin.invitation
#                    - app.admin.candidate
#                    - app.admin.interview_question_set
#                    - app.admin.interview_question
            system:
                label: dashboard.system
                icon: '<i class="fa fa-users"></i>'
                items:
                    - sonata.user.admin.user
                    - sonata.user.admin.group
#                    - sonata.classification.admin.context
#                    - sonata.classification.admin.category
#                    - sonata.classification.admin.collection
#                    - sonata.classification.admin.tag
                    - sonata.notification.admin.message
#                    - bean_location.admin.geolocation
#                    - app.admin.organisation_location
            content:
                label: dashboard.content
                icon: '<i class="fa fa-file-text-o"></i>'
                items:
#                    - cmf_content.admin
#                    - app.admin.post
#                    - cmf_sonata_admin_integration.content.admin

#                    - cmf_sonata_admin_integration.block.simple_admin
#                    - cmf_sonata_admin_integration.block.container_admin
#                    - cmf_sonata_admin_integration.block.reference_admin
#                    - cmf_sonata_admin_integration.block.action_admin
#                    - cmf_sonata_admin_integration.block.string_admin
#                    - cmf_sonata_admin_integration.block.menu_admin
#                    - cmf_sonata_admin_integration.block.imagine.slideshow_admin
                    
            routing:
                label: URLs
                icon: '<i class="fa fa-link"></i>'
                items:
 #                   - cmf_routing.route_admin
#                    - cmf_routing.redirect_route_admin
            menu:
                label: Menu
                icon: '<i class="fa  fa-bars"></i>'
                items:
#                    - cmf_menu.menu_admin
#                    - cmf_menu.node_admin

sonata_media:
    # if you don't use default namespace configuration
    class:
        media: AppBundle\Entity\Media\Media
        gallery: AppBundle\Entity\Media\Gallery
        gallery_has_media: AppBundle\Entity\Media\GalleryHasMedia
    default_context: default
    db_driver: doctrine_orm # could be doctrine_orm, doctrine_mongodb or doctrine_phpcr
    contexts:
        default:  # the default context is mandatory
            download:
#                strategy: app.sonata_media.security.user_strategy
                mode: http

            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file

            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}

        thumbnail:
            providers:
                - sonata.media.provider.image
            formats:
                small: { width: 100 , quality: 70}
#                big:   { width: 500 , quality: 70}

        sonata_collection:
            providers:
                - sonata.media.provider.image

            formats:
                preview: { width: 100, quality: 100}
                wide:    { width: 820, quality: 100}

        job_industry:
            providers:
                - sonata.media.provider.image

            formats:
                preview: { width: 100, quality: 100}
                wide:    { width: 820, quality: 100}
                
#    cdn:
#        server:
#            path: /uploads/media # http://media.sonata-project.org/
    cdn:
        # The CDN part must point to the base root of your application with a valid htaccess to match non existant
        # file. The non existant image will be send to the SonataMediaBundle:Media:liipImagineFilter controller.
        server:
#            path:     %app_baseroute% #http://mydomain.com
            path: http://%s3_bucket_name%.s3-website-%s3_region%.amazonaws.com
#            path: http://%s3_region%/%s3_bucket_name% # this one is no longer working
#            path: /uploads/media # http://media.sonata-project.org/
#http://s3-ap-southeast-1.amazonaws.com/magenta-consulting.com/

    filesystem:
        local:
            directory:  "%kernel.root_dir%/../web/uploads/media"
            create:     false
        s3:
            bucket:      "%s3_bucket_name%"
            accessKey:   "%s3_access_key%"
            secretKey:   "%s3_secret_key%"
            region:      "%s3_region%"
            version:     "%s3_version%" # latest by default (cf. https://docs.aws.amazon.com/aws-sdk-php/v3/guide/guide/configuration.html#version)
            sdk_version: 3 # 2 by default - "%s3_sdk_version%" is no longer permissable
            directory:   "%s3_directory%"

            create:         false
            #region:         s3.amazonaws.com # change if not using US Standard region
            storage:        standard # can be one of: standard or reduced
            acl:            public # can be one of: public, private, open, auth_read, owner_read, owner_full_control
#            encryption:     aes256 # can be aes256 or not set
            cache_control:  max-age=86400 # or any other
#            meta:
 #               key1:       value1 #any amount of metas(sent as x-amz-meta-key1 = value1)


# providers:
#        image:
#            resizer: sonata.media.resizer.square
#            filesystem: sonata.media.filesystem.s3
#        file:
#            resizer: false
#            filesystem: sonata.media.filesystem.s3
#            service:    sonata.media.provider.file
#            allowed_extensions: ['pdf', 'txt', 'rtf', 'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pptx', 'odt', 'odg', 'odp', 'ods', 'odc', 'odf', 'odb', 'csv', 'xml','png','jpg','jpeg','webm','wav','blob','','mp4']
#            allowed_mime_types: ['application/pdf', 'application/x-pdf', 'application/rtf', 'text/html', 'text/rtf', 'text/plain','application/json','image/png','image/jpg','image/jpeg','application/vnd.ms-excel','application/vnd.openxmlformats-officedocument.presentationml.presentation','application/vnd.openxmlformats-officedocument.spreadsheetml.sheet','audio/x-wav','video/webm','application/octet-stream','video/mp4','binary/octet-stream']

    providers:
        # ...
        file:
            filesystem: sonata.media.filesystem.s3
#            thumbnail:  app.sonata_media.thumbnail.file

#            generator: app.sonata.media.generator.default
            allowed_extensions:
                - mp4
                # Defaults:
                - pdf
                - txt
                - rtf
                - doc
                - docx
                - xls
                - xlsx
                - ppt
                - pptx
                - odt
                - odg
                - odp
                - ods
                - odc
                - odf
                - odb
                - csv
                - xml
            allowed_mime_types:
                - video/mp4
                - application/vnd.openxmlformats-officedocument.wordprocessingml.document
                # Defaults:
                - application/pdf
                - application/x-pdf
                - application/rtf
                - text/html
                - text/rtf
                - text/plain
                - application/excel
                - application/msword
                - application/vnd.ms-excel
                - application/vnd.ms-powerpoint
                - application/vnd.ms-powerpoint
                - application/vnd.oasis.opendocument.text
                - application/vnd.oasis.opendocument.graphics
                - application/vnd.oasis.opendocument.presentation
                - application/vnd.oasis.opendocument.spreadsheet
                - application/vnd.oasis.opendocument.chart
                - application/vnd.oasis.opendocument.formula
                - application/vnd.oasis.opendocument.database
                - application/vnd.oasis.opendocument.image
                - text/comma-separated-values
                - text/xml
                - application/xml
                - application/zip

        image:
            resizer: sonata.media.resizer.square
#            thumbnail:  sonata.media.thumbnail.liip_imagine
            filesystem: sonata.media.filesystem.s3
#            generator: app.sonata.media.generator.default
#        vimeo:
#            thumbnail:  sonata.media.thumbnail.liip_imagine
        youtube:
            filesystem: sonata.media.filesystem.s3

#            thumbnail:  sonata.media.thumbnail.liip_imagine
#        dailymotion:
#            thumbnail:  sonata.media.thumbnail.liip_imagine


sonata_translation:
    locales: '%locales%'
    default_locale: '%locale%'
    phpcr: true
#    gedmo: true
    knplabs:
        enabled: true

sonata_seo:
    page:
        title: CMF Sandbox
        metas:
            name:
                keywords: 'CMF, Symfony, Routing, Content, PHPCR'

sonata_user:
#    security_acl: true
    manager_type: orm # can be orm or mongodb
    table:
        user_group: user__users_groups
    class:
        group: AppBundle\Entity\User\Group
        user:  AppBundle\Entity\User\User
#    admin:
#        group:
#            class:                ~
#            controller:           'SonataAdminBundle:CRUD'
#            translation:          SonataUserBundle
#        user:
#            class:                Application\Sonata\UserBundle\Admin\AppUserAdmin
#            controller:           'ApplicationSonataUserBundle:Admin/User'
#            translation:          SonataUserBundle

sonata_doctrine_phpcr_admin:
#    templates:
#        form:
#            - admin/form_admin_fields.html.twig
    document_tree_defaults: [locale]
    document_tree:
        Doctrine\ODM\PHPCR\Document\Generic:
            valid_children:
                - all
        AppBundle\Document\Post:
            valid_children:
                - Symfony\Cmf\Bundle\BlockBundle\Doctrine\Phpcr\SimpleBlock
                - Symfony\Cmf\Bundle\BlockBundle\Doctrine\Phpcr\ContainerBlock
                - Symfony\Cmf\Bundle\BlockBundle\Doctrine\Phpcr\ReferenceBlock
                - Symfony\Cmf\Bundle\BlockBundle\Doctrine\Phpcr\ActionBlock
                - Symfony\Cmf\Bundle\BlockBundle\Doctrine\Phpcr\RssBlock
        Symfony\Cmf\Bundle\BlockBundle\Doctrine\Phpcr\ReferenceBlock:
            valid_children: []
        Symfony\Cmf\Bundle\BlockBundle\Doctrine\Phpcr\ActionBlock:
            valid_children: []
        Symfony\Cmf\Bundle\BlockBundle\Doctrine\Phpcr\SimpleBlock:
            valid_children: []
        Symfony\Cmf\Bundle\BlockBundle\Doctrine\Phpcr\SlideshowBlock:
            valid_children:
                - Symfony\Cmf\Bundle\BlockBundle\Doctrine\Phpcr\ImagineBlock
        Symfony\Cmf\Bundle\BlockBundle\Doctrine\Phpcr\ImagineBlock:
            valid_children: []
        Symfony\Cmf\Bundle\BlockBundle\Doctrine\Phpcr\RssBlock:
            valid_children: []
        Symfony\Cmf\Bundle\BlockBundle\Doctrine\Phpcr\ContainerBlock:
            valid_children:
                - Symfony\Cmf\Bundle\BlockBundle\Doctrine\Phpcr\SimpleBlock
                - Symfony\Cmf\Bundle\BlockBundle\Doctrine\Phpcr\ContainerBlock
                - Symfony\Cmf\Bundle\BlockBundle\Doctrine\Phpcr\ReferenceBlock
                - Symfony\Cmf\Bundle\BlockBundle\Doctrine\Phpcr\ActionBlock
                - Symfony\Cmf\Bundle\BlockBundle\Doctrine\Phpcr\SlideshowBlock
                - Symfony\Cmf\Bundle\BlockBundle\Doctrine\Phpcr\RssBlock
        Symfony\Cmf\Bundle\RoutingBundle\Doctrine\Phpcr\Route:
            valid_children:
                - Symfony\Cmf\Bundle\RoutingBundle\Doctrine\Phpcr\Route
                - Symfony\Cmf\Bundle\RoutingBundle\Doctrine\Phpcr\RedirectRoute
        Symfony\Cmf\Bundle\RoutingBundle\Doctrine\Phpcr\RedirectRoute:
            valid_children: []
        Symfony\Cmf\Bundle\MenuBundle\Doctrine\Phpcr\Menu:
            valid_children:
                - Symfony\Cmf\Bundle\MenuBundle\Doctrine\Phpcr\MenuNode
        Symfony\Cmf\Bundle\MenuBundle\Doctrine\Phpcr\MenuNode:
            valid_children:
                - Symfony\Cmf\Bundle\MenuBundle\Doctrine\Phpcr\MenuNode
