# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
#parameters:

assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    filters:
        cssrewrite: ~

bean_location:
    db_driver: orm


white_october_pagerfanta:
    default_view:         app_pagerfanta_view_default
    exceptions_strategy:
        out_of_range_page:    ~
        not_valid_current_page:  ~


lunetics_locale:
    guessing_order:
        - router
        - cookie
        - browser
    strict_mode: true
    allowed_locales: '%locales%'


hwi_oauth:
    # name of the firewall in which this bundle is active, this setting MUST be set
    firewall_names: [main]
    target_path_parameter: target_path
    use_referer: true
    connect:
        account_connector: user.provider.oauth # here and firewalls.main.oauth.oauth_user_provider.service
    resource_owners:
        facebook:
            type:                facebook
            client_id:           %facebook_client_id%
            client_secret:       %facebook_client_secret%
            scope:               "email, public_profile"
            infos_url:           "https://graph.facebook.com/me?fields=id,name,first_name,last_name,email,picture.type(large)"
            paths:
                email: email
            options:
                display: page
                csrf: true
        google:
            type:                google
            client_id:           %google_client_id%
            client_secret:       %google_client_secret%
            scope:              "https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile"
            paths:
                email: email

    connect: ~
    fosub:
        properties: ~

liip_theme:
    themes: ['standard', 'tiengphap', 'tiengnhat', 'tienganh']
    active_theme: 'standard'
    # If your application doesn't allow the user to switch theme, you can deactivate the controller shipped with the bundle:
    load_controllers: false
    #Because of the way the LiipThemeBundle overrides the template locator service, assetic will only dump the assets of the active theme. In order to dump the assets of all themes enable the assetic_integration option:
    assetic_integration: true
    # You can provide specific themes or even templates for different devices (like: desktop, tablet, phone, plain). Set option autodetect_theme to true for setting current_device parameter based on the user agent:
    autodetect_theme: true
    # Then in path_patterns you can use %%current_device%% parameter (with your device type as value)
    path_patterns:
        app_resource:
            - %%app_path%%/themes/%%current_theme%%/%%current_device%%/%%template%%
            - %%app_path%%/themes/standard/%%current_device%%/%%template%%
            - %%app_path%%/views/%%current_device%%/%%template%%

liip_imagine:
    # ...
#    controller:
#        filter_action:  'AppBundle:VendorFilter:liipImagineFilter'
    filter_sets:
        cmf_block:
            data_loader: cmf_media_doctrine_phpcr
            quality: 85
#            filters:
#                thumbnail: { size: [616, 419], mode: outbound }
        # ...
        default_admin:
            quality: 75
            filters:
                thumbnail: { size: [200, null], mode: outbound }

        default_small:
            quality: 75
            filters:
                thumbnail: { size: [100, 70], mode: outbound }

        default_big:
            quality: 75
            filters:
                thumbnail: { size: [500, 70], mode: outbound }

ivory_ck_editor:
    toolbars:
        configs:
            minimum_1: [ [ "Source", "-", "Save" ], "/", [ "Anchor" ], "/", [ "Maximize" ] ]
    default_config: default
    configs:
        cmf_content: { toolbar: standard }
        user_edit: {toolbar: basic}
        default:
            toolbar: standard
            filebrowserBrowseRoute: admin_app_media_media_ckeditor_browser
            filebrowserImageBrowseRoute: admin_app_media_media_ckeditor_browser
            # Display images by default when clicking the image dialog browse button
            filebrowserImageBrowseRouteParameters:
                provider: sonata.media.provider.image
            filebrowserUploadRoute: admin_app_media_media_ckeditor_upload
            filebrowserUploadRouteParameters:
                provider: sonata.media.provider.file
            # Upload file as image when sending a file from the image dialog
            filebrowserImageUploadRoute: admin_app_media_media_ckeditor_upload
            filebrowserImageUploadRouteParameters:
                provider: sonata.media.provider.image
#                context: my-context # Optional, to upload in a custom context


sensio_framework_extra:
    router:  { annotations: true }
    request: { converters: true }

fos_user:
    db_driver:      orm # can be orm or odm
    firewall_name:  main
    user_class:     AppBundle\Entity\User\User
    from_email:
        address:              no-reply@magentapulse.com
        sender_name:          KPortal Auto Sender
    registration:
#        form:
#            type: Application\Sonata\UserBundle\Form\Type\RegistrationFormType
        confirmation:
            enabled:              false
            template:             'FOSUserBundle:Registration:email.txt.twig'
            from_email:
                address:              no-reply@magentapulse.com
                sender_name:          Interview-spot Auto Email
    resetting:
        token_ttl:            86400
        email:
            template:             'FOSUserBundle:Resetting:email.txt.twig'
            from_email:
                address:              no-reply@magentapulse.com
                sender_name:          Interview-spot Auto Email
    group:
        group_class:   AppBundle\Entity\User\Group
        group_manager: sonata.user.orm.group_manager
        # If you're using doctrine orm (use sonata.user.mongodb.user_manager for mongodb)

    service:
        user_manager: sonata.user.orm.user_manager
        # If you're using doctrine orm (use sonata.user.mongodb.group_manager for mongodb)

fos_rest:
    routing_loader:
        default_format: json
#    service:
#        serializer:

fos_js_routing:
    routes_to_expose: [ app_job_search, get_jobs, get_filters, get_industries, get_locations, get__media_cvs, get__media_videos, app_job_detail, get__email_check, get__media, delete__medium, put__medium_name, sonata_media_download ]
